{"ast":null,"code":"var _jsxFileName = \"/home/muano/workspace/react-and-redux-form/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addMessage } from './Redux/Actions/actionCreator';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DisplayMessages() {\n  _s();\n\n  const dispatch = useDispatch();\n  const message = useSelector(state => state.message);\n  const [form, setForm] = useState({\n    input: \"\"\n  });\n\n  const handleChange = event => {\n    setForm({ ...form,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const submitMessage = () => {\n    dispatch(addMessage(form.input));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Type in a new Message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: handleChange,\n      value: form.input,\n      name: \"input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: submitMessage,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: message.map((text, index) => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: text\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n} //   constructor(props){\n//     super(props)\n//     this.state =({\n//       input: \"\",\n//       messages: []\n//     });\n//   }\n// handleChange(event){\n//   this.setState({\n//     input: event.target.value,\n//     messages: this.state.messages \n//   })\n// }\n// submitMessage(){\n//   this.setState({\n//     input: \"\",\n//     messages: [...this.state.messages, this.state.input]\n//   })\n// }\n// render(){\n//   return(\n//     <div>\n//       <h2>Type in a new Message</h2>\n//       <input onChange={this.handleChange.bind(this)} value={this.state.input}/>\n//       <button onClick={this.submitMessage.bind(this)}>Submit</button>\n//       <ul>\n//         {this.state.messages.map((item, index) =>{\n//           return(\n//             <li key={index}>{item}</li>\n//             )\n//           })}\n//       </ul>\n//     </div>\n//   )\n// }\n// }\n\n\n_s(DisplayMessages, \"VbZ7b79PBslfBc0r87aLN4dMejg=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = DisplayMessages;\nexport default DisplayMessages;\n\nvar _c;\n\n$RefreshReg$(_c, \"DisplayMessages\");","map":{"version":3,"sources":["/home/muano/workspace/react-and-redux-form/src/App.js"],"names":["React","useState","useSelector","useDispatch","addMessage","DisplayMessages","dispatch","message","state","form","setForm","input","handleChange","event","target","name","value","submitMessage","map","text","index"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,UAAR,QAAyB,+BAAzB;;;AAEA,SAASC,eAAT,GAA0B;AAAA;;AACxB,QAAMC,QAAQ,GAAGH,WAAW,EAA5B;AACA,QAAMI,OAAO,GAAGL,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACD,OAAhB,CAA3B;AACA,QAAM,CAACE,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC;AAC1BU,IAAAA,KAAK,EAAE;AADmB,GAAD,CAAhC;;AAIM,QAAMC,YAAY,GAAGC,KAAD,IAAS;AACzBH,IAAAA,OAAO,CAAC,EAAC,GAAGD,IAAJ;AACN,OAACI,KAAK,CAACC,MAAN,CAAaC,IAAd,GAAqBF,KAAK,CAACC,MAAN,CAAaE;AAD5B,KAAD,CAAP;AAID,GALH;;AAME,QAAMC,aAAa,GAAG,MAAM;AACxBX,IAAAA,QAAQ,CAACF,UAAU,CAACK,IAAI,CAACE,KAAN,CAAX,CAAR;AACD,GAFH;;AAGR,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEC;AAAO,MAAA,QAAQ,EAAEC,YAAjB;AAA+B,MAAA,KAAK,EAAEH,IAAI,CAACE,KAA3C;AAAkD,MAAA,IAAI,EAAC;AAAvD;AAAA;AAAA;AAAA;AAAA,YAFD,eAGC;AAAQ,MAAA,OAAO,EAAEM,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHD,eAIE;AAAA,gBACCV,OAAO,CAACW,GAAR,CAAY,CAACC,IAAD,EAAOC,KAAP,KAAe;AAC1B,4BACE;AAAA,oBAAiBD;AAAjB,WAASC,KAAT;AAAA;AAAA;AAAA;AAAA,gBADF;AAGD,OAJA;AADD;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,C,CAEA;AACD;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;;;GA1ESf,e;UACUF,W,EACDD,W;;;KAFTG,e;AA4ET,eAAeA,eAAf","sourcesContent":["import './App.css';\nimport React, {useState} from 'react';\nimport {useSelector, useDispatch} from 'react-redux'\nimport {addMessage} from './Redux/Actions/actionCreator'\n\nfunction DisplayMessages(){\n  const dispatch = useDispatch()\n  const message = useSelector(state => state.message)\n  const [form, setForm] = useState({\n         input: \"\",\n         \n        })\n        const handleChange =(event)=>{\n            setForm({...form,\n              [event.target.name]: event.target.value,\n            \n            })\n          }\n          const submitMessage = () => {\n              dispatch(addMessage(form.input))\n            }\n  return (\n    <div>\n      <h2>Type in a new Message</h2>\n     <input onChange={handleChange} value={form.input} name='input'/>\n     <button onClick={submitMessage}>Submit</button>\n      <ul>\n      {message.map((text, index)=>{\n        return(\n          <li key={index}>{text}</li>\n        )\n      })}\n\n      </ul>\n\n    </div>\n  )\n}\n\n //   constructor(props){\n//     super(props)\n//     this.state =({\n//       input: \"\",\n//       messages: []\n//     });\n//   }\n\n// handleChange(event){\n//   this.setState({\n//     input: event.target.value,\n//     messages: this.state.messages \n//   })\n// }\n\n// submitMessage(){\n//   this.setState({\n//     input: \"\",\n//     messages: [...this.state.messages, this.state.input]\n//   })\n// }\n// render(){\n//   return(\n//     <div>\n//       <h2>Type in a new Message</h2>\n//       <input onChange={this.handleChange.bind(this)} value={this.state.input}/>\n//       <button onClick={this.submitMessage.bind(this)}>Submit</button>\n//       <ul>\n//         {this.state.messages.map((item, index) =>{\n//           return(\n//             <li key={index}>{item}</li>\n//             )\n//           })}\n\n//       </ul>\n\n//     </div>\n//   )\n// }\n\n// }\n\nexport default DisplayMessages;\n\n"]},"metadata":{},"sourceType":"module"}